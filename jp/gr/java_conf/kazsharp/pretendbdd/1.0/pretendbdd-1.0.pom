<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>jp.gr.java_conf.kazsharp</groupId>
	<artifactId>pretendbdd</artifactId>
	<version>1.0</version>
	<packaging>jar</packaging>
	<description>A Java library to pretend BDD</description>

	<name>pretendbdd</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<github.global.server>github</github.global.server>
	</properties>

	<licenses>
		<license>
			<name>The MIT License (MIT)</name>
			<url>http://opensource.org/licenses/mit-license.php</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<dependencies>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
		</dependency>

	</dependencies>

	<distributionManagement>
		<repository>
			<id>internal.repo</id>
			<name>Temporary Staging Repository</name>
			<url>file://${project.build.directory}/mvn-repo</url>
		</repository>
	</distributionManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>com.github.github</groupId>
				<artifactId>site-maven-plugin</artifactId>
				<configuration>
					<!-- jarファイルをディプロイする時のコミットメッセージ -->
					<message>Maven artifacts for ${project.version}</message>
					<!-- Jekyllという静的ページを生成するツールは無効 -->
					<noJekyll>true</noJekyll>
					<!-- 1.で指定したパスと同じものを指定 -->
					<outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>
					<!-- Mavenリポジトリにするリモートのブランチ名 -->
					<branch>refs/heads/mvn-repo</branch>
					<includes>
						<include>**/*</include>
					</includes>
					<!-- GitHubリポジトリ名 -->
					<repositoryName>pretendbdd</repositoryName>
					<!-- GitHubユーザ名 -->
					<repositoryOwner>kazsharp</repositoryOwner>
				</configuration>
				<executions>
					<!-- run site-maven-plugin's 'site' target as part of the build's normal
						'deploy' phase -->
					<execution>
						<goals>
							<goal>site</goal>
						</goals>
						<phase>deploy</phase>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
